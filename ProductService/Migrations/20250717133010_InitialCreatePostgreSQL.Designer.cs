// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductService.Data;

#nullable disable

namespace ProductService.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20250717133010_InitialCreatePostgreSQL")]
    partial class InitialCreatePostgreSQL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("Brand");

                    b.HasIndex("Category");

                    b.HasIndex("IsActive");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Apple",
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 7, 17, 13, 30, 10, 407, DateTimeKind.Utc).AddTicks(1357),
                            Description = "Latest iPhone with advanced features",
                            ImageUrl = "https://example.com/iphone15pro.jpg",
                            IsActive = true,
                            Name = "iPhone 15 Pro",
                            Price = 999.99m,
                            StockQuantity = 50,
                            UpdatedAt = new DateTime(2025, 7, 17, 13, 30, 10, 407, DateTimeKind.Utc).AddTicks(1357)
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Samsung",
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 7, 17, 13, 30, 10, 407, DateTimeKind.Utc).AddTicks(1437),
                            Description = "Premium Android smartphone",
                            ImageUrl = "https://example.com/galaxys24.jpg",
                            IsActive = true,
                            Name = "Samsung Galaxy S24",
                            Price = 799.99m,
                            StockQuantity = 30,
                            UpdatedAt = new DateTime(2025, 7, 17, 13, 30, 10, 407, DateTimeKind.Utc).AddTicks(1438)
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Apple",
                            Category = "Computers",
                            CreatedAt = new DateTime(2025, 7, 17, 13, 30, 10, 407, DateTimeKind.Utc).AddTicks(1440),
                            Description = "Professional laptop for developers",
                            ImageUrl = "https://example.com/macbookpro16.jpg",
                            IsActive = true,
                            Name = "MacBook Pro 16\"",
                            Price = 2499.99m,
                            StockQuantity = 20,
                            UpdatedAt = new DateTime(2025, 7, 17, 13, 30, 10, 407, DateTimeKind.Utc).AddTicks(1441)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
